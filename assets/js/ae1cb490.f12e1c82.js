"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7672],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return p}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(n),p=r,h=d["".concat(l,".").concat(p)]||d[p]||m[p]||a;return n?o.createElement(h,i(i({ref:t},u),{},{components:n})):o.createElement(h,i({ref:t},u))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8215:function(e,t,n){var o=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,r=e.className;return o.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},5064:function(e,t,n){n.d(t,{Z:function(){return c}});var o=n(7294),r=n(9443);var a=function(){var e=(0,o.useContext)(r.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},i=n(6010),s="tabItem_1uMI",l="tabItemActive_2DSg";var c=function(e){var t,n=e.lazy,r=e.block,c=e.defaultValue,u=e.values,m=e.groupId,d=e.className,p=o.Children.toArray(e.children),h=null!=u?u:p.map((function(e){return{value:e.props.value,label:e.props.label}})),b=null!=c?c:null==(t=p.find((function(e){return e.props.default})))?void 0:t.props.value,g=a(),f=g.tabGroupChoices,x=g.setTabGroupChoices,k=(0,o.useState)(b),v=k[0],N=k[1],y=[];if(null!=m){var C=f[m];null!=C&&C!==v&&h.some((function(e){return e.value===C}))&&N(C)}var S=function(e){var t=e.currentTarget,n=y.indexOf(t),o=h[n].value;N(o),null!=m&&(x(m,o),setTimeout((function(){var e,n,o,r,a,i,s,c;(e=t.getBoundingClientRect(),n=e.top,o=e.left,r=e.bottom,a=e.right,i=window,s=i.innerHeight,c=i.innerWidth,n>=0&&a<=c&&r<=s&&o>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(l),setTimeout((function(){return t.classList.remove(l)}),2e3))}),150))},R=function(e){var t,n=null;switch(e.key){case"ArrowRight":var o=y.indexOf(e.target)+1;n=y[o]||y[0];break;case"ArrowLeft":var r=y.indexOf(e.target)-1;n=y[r]||y[y.length-1]}null==(t=n)||t.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":r},d)},h.map((function(e){var t=e.value,n=e.label;return o.createElement("li",{role:"tab",tabIndex:v===t?0:-1,"aria-selected":v===t,className:(0,i.Z)("tabs__item",s,{"tabs__item--active":v===t}),key:t,ref:function(e){return y.push(e)},onKeyDown:R,onFocus:S,onClick:S},null!=n?n:t)}))),n?(0,o.cloneElement)(p.filter((function(e){return e.props.value===v}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},p.map((function(e,t){return(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==v})}))))}},9443:function(e,t,n){var o=(0,n(7294).createContext)(void 0);t.Z=o},4585:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return m},toc:function(){return d},default:function(){return h}});var o=n(7462),r=n(3366),a=(n(7294),n(3905)),i=n(5064),s=n(8215),l=["components"],c={id:"mobx",title:"Mobx",sidebar_label:"Mobx",description:"Using Mobx in Next.js Project"},u=void 0,m={unversionedId:"nextjs/state-management/mobx",id:"nextjs/state-management/mobx",isDocsHomePage:!1,title:"Mobx",description:"Using Mobx in Next.js Project",source:"@site/docs/nextjs/state-management/mobx.md",sourceDirName:"nextjs/state-management",slug:"/nextjs/state-management/mobx",permalink:"/superplate/docs/nextjs/state-management/mobx",editUrl:"https://github.com/pankod/superplate/tree/master/documentation/docs/nextjs/state-management/mobx.md",tags:[],version:"current",lastUpdatedBy:"\xd6mer Faruk APLAK",lastUpdatedAt:1620740656,formattedLastUpdatedAt:"5/11/2021",frontMatter:{id:"mobx",title:"Mobx",sidebar_label:"Mobx",description:"Using Mobx in Next.js Project"},sidebar:"someSidebar",previous:{title:"Recoil.js",permalink:"/superplate/docs/nextjs/state-management/recoil"},next:{title:"Zustand",permalink:"/superplate/docs/nextjs/state-management/zustand"}},d=[{value:"Observable state",id:"observable-state",children:[{value:"Making observable stores with classes",id:"making-observable-stores-with-classes",children:[]}]},{value:"Actions",id:"actions",children:[]},{value:"Using store in components",id:"using-store-in-components",children:[]},{value:"Using <code>mobx-state-tree</code>",id:"using-mobx-state-tree",children:[{value:"<code>CounterStore</code>",id:"counterstore",children:[]},{value:"<code>RootStore</code>",id:"rootstore",children:[]},{value:"<code>RootStoreProvider</code>",id:"rootstoreprovider",children:[]}]},{value:"Adding mobx to your project later",id:"adding-mobx-to-your-project-later",children:[]}],p={toc:d};function h(e){var t=e.components,n=(0,r.Z)(e,l);return(0,a.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Simple, scalable state management.")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Anything that can be derived from the application state, should be. Automatically.")),(0,a.kt)("p",null,"MobX is a battle tested library that makes state management simple and scalable by transparently applying functional reactive programming.",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("a",{parentName:"p",href:"https://mobx.js.org/README.html"},"Refer to official documentation for detailed usage. ","\u2192")),(0,a.kt)("h2",{id:"observable-state"},"Observable state"),(0,a.kt)("p",null,"Mobx uses observables for store values. Properties, entire objects, arrays, Maps and Sets can all be made observable.",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("a",{parentName:"p",href:"https://mobx.js.org/observable-state.html"},"Refer to official documentation on observable state for detailed usage. ","\u2192")),(0,a.kt)("h3",{id:"making-observable-stores-with-classes"},"Making observable stores with classes"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Make a counter store that holds a ",(0,a.kt)("inlineCode",{parentName:"li"},"count")," state")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/mobx/stores/counter/index.ts"',title:'"src/mobx/stores/counter/index.ts"'},'import { makeAutoObservable } from "mobx";\n\nimport { ICounter } from "./counter";\n\nexport class CounterStore implements ICounter {\n  count = 0;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/mobx/stores/counter/counter.d.ts"',title:'"src/mobx/stores/counter/counter.d.ts"'},"export interface ICounter {\n  count: number;\n}\n")),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},(0,a.kt)("inlineCode",{parentName:"p"},"makeAutoObservable")," and its cousin ",(0,a.kt)("inlineCode",{parentName:"p"},"makeObservable")," trap existing object properties and make them observable. ",(0,a.kt)("inlineCode",{parentName:"p"},"makeAutoObservable")," is like ",(0,a.kt)("inlineCode",{parentName:"p"},"makeObservable")," on steroids, as it infers all the properties by default."))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Make a root store that holds the counter store")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/mobx/stores/index.ts"',title:'"src/mobx/stores/index.ts"'},'import { iroot } from "./store";\nimport { CounterStore } from "./counter";\nimport { ICounter } from "./counter/counter";\n\nexport class RootStore implements IRoot {\n    counterStore: ICounter;\n\n    constructor() {\n        this.counterStore = new CounterStore();\n    }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/mobx/stores/store.d.ts"',title:'"src/mobx/stores/store.d.ts"'},'import { ICounter } from "./stores/counter/counter";\n\nexport interface iroot {\n  counterStore: ICounter;\n}\n')),(0,a.kt)("p",null,"Before starting to read data from the store, let's add some action."),(0,a.kt)("h2",{id:"actions"},"Actions"),(0,a.kt)("p",null,"An action is any piece of code that modifies the state."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Add actions to counter store.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/mobx/stores/counter/index.ts"',title:'"src/mobx/stores/counter/index.ts"'},'import { makeAutoObservable } from "mobx";\n\nimport { ICounter } from "./counter";\n\nexport class CounterStore implements ICounter {\n  count = 0;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n// highlight-start\n  increase = () => {\n    this.count++;\n  };\n\n  decrease = () => {\n    this.count--;\n  };\n// highlight-end\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/mobx/stores/counter/counter.d.ts"',title:'"src/mobx/stores/counter/counter.d.ts"'},"export interface ICounter {\n  count: number;\n// highlight-start\n  increase: () => void;\n  decrease: () => void;\n// highlight-end\n}\n")),(0,a.kt)("h2",{id:"using-store-in-components"},"Using store in components"),(0,a.kt)("p",null,"Firstly store must be made accessible to components. It can be done with ",(0,a.kt)("inlineCode",{parentName:"p"},"React.useContext"),". Then with a custom hook, store can be read from components."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Make a context to hold store.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/mobx/index.tsx"',title:'"src/mobx/index.tsx"'},'import React from "react";\n\nconst StoreContext = React.createContext<RootStore | undefined>(undefined);\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Use its provider to make store accessible to all components.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/mobx/index.tsx"',title:'"src/mobx/index.tsx"'},'import React from "react";\n// highlight-start\nimport { IRoot } from "./stores/store";\n// highlight-end\n\n// highlight-start\nlet store: IRoot;\n// highlight-end\n\nconst StoreContext = React.createContext<RootStore | undefined>(undefined);\n\n// highlight-start\nexport const RootStoreProvider = ({\n  children,\n}: {\n  children: React.ReactNode;\n}) => {\n  const root = store ?? new RootStore();\n\n  return <StoreContext.Provider value={root}>{children}</StoreContext.Provider>;\n};\n// highlight-end\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Components can read from store via a custom hook.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/mobx/index.tsx"',title:'"src/mobx/index.tsx"'},'import React from "react";\nimport { IRoot } from "./stores/store";\n\nlet store: IRoot;\n\nconst StoreContext = React.createContext<RootStore | undefined>(undefined);\n\nexport const RootStoreProvider = ({\n  children,\n}: {\n  children: React.ReactNode;\n}) => {\n  const root = store ?? new RootStore();\n\n  return <StoreContext.Provider value={root}>{children}</StoreContext.Provider>;\n};\n\n// highlight-start\nexport const useRootStore = () => {\n  const context = React.useContext(StoreContext);\n  if (context === undefined) {\n    throw new Error("useRootStore must be used within RootStoreProvider");\n  }\n\n  return context;\n};\n// highlight-end\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Wrap your component with ",(0,a.kt)("inlineCode",{parentName:"li"},"observer")," HOC.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="Your Component"',title:'"Your','Component"':!0},'// highlight-start\nimport { observer } from "mobx-react";\n// highlight-end\nimport { useRootStore } from "@mobx";\n\n// highlight-start\nexport const MobxExample: React.FC = observer(() => {\n// highlight-end\n  const { counterStore } = useRootStore();\n  const { count, increase, decrease } = counterStore;\n\n  return (\n    <div>\n      <div>\n        <h2>Counter</h2>\n        <button\n          type="button"\n          onClick={increase}\n        >\n          +\n        </button>\n        <span>{count}</span>\n        <button\n          type="button"\n          onClick={decrease}\n        >\n          -\n        </button>\n      </div>\n    </div>\n  );\n});\n')),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://mobx.js.org/react-integration.html"},"Refer to official documentation on React integration for detailed usage. ","\u2192")),(0,a.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"You might consider using mobx-react-lite instead of mobx-react if you're not using class components."))),(0,a.kt)("h2",{id:"using-mobx-state-tree"},"Using ",(0,a.kt)("inlineCode",{parentName:"h2"},"mobx-state-tree")),(0,a.kt)("p",null,"Mobx State Tree provides a better structured state management and tools you need in your app. If you want to use ",(0,a.kt)("inlineCode",{parentName:"p"},"mobx-state-tree"),", you need to make some changes to the files you've created above."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'{\n  "dependencies": {\n    ...\n    // highlight-next-line\n      "mobx-state-tree": "^5.0.1",\n    ...\n  }\n}\n')),(0,a.kt)("h3",{id:"counterstore"},(0,a.kt)("inlineCode",{parentName:"h3"},"CounterStore")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"mobx-state-tree")," provides a simpler API to create our stores and actions."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="mobx/stores/counter/index.ts"',title:'"mobx/stores/counter/index.ts"'},'import { types } from "mobx-state-tree";\n\nexport const CounterStore = types\n    .model("Counter", {\n        count: 0,\n    })\n    .actions((counter) => ({\n        increase() {\n            counter.count += 1;\n        },\n        decrease() {\n            counter.count -= 1;\n        },\n    }));\n')),(0,a.kt)("h3",{id:"rootstore"},(0,a.kt)("inlineCode",{parentName:"h3"},"RootStore")),(0,a.kt)("p",null,"After the changes in ",(0,a.kt)("inlineCode",{parentName:"p"},"CounterStore")," we will need to update ",(0,a.kt)("inlineCode",{parentName:"p"},"RootStore")," with ",(0,a.kt)("inlineCode",{parentName:"p"},"mobx-state-tree")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="mobx/stores/index.ts"',title:'"mobx/stores/index.ts"'},'import { types } from "mobx-state-tree";\nimport { CounterStore } from "./counter";\n\n// highlight-start\nexport const RootStore = types.model("RootStore", {\n    counterStore: CounterStore,\n});\n// highlight-end\n\nexport const createRootStore = () =>\n    // highlight-start\n    RootStore.create({\n        counterStore: CounterStore.create(),\n    });\n    // highlight-end\n')),(0,a.kt)("h3",{id:"rootstoreprovider"},(0,a.kt)("inlineCode",{parentName:"h3"},"RootStoreProvider")),(0,a.kt)("p",null,"Finally, you need to update ",(0,a.kt)("inlineCode",{parentName:"p"},"RootStoreProvider")," with the ",(0,a.kt)("inlineCode",{parentName:"p"},"createRootStore")," function."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="mobx/index.tsx"',title:'"mobx/index.tsx"'},'import React from "react";\n\n// highlight-next-line\nimport { createRootStore } from "./stores";\n\nconst StoreContext = React.createContext<\n    ReturnType<typeof createRootStore> | undefined\n>(undefined);\n\nexport const RootStoreProvider = ({\n    children,\n}: {\n    children: React.ReactNode;\n}) => {\n    // highlight-next-line\n    const root = createRootStore();\n\n    return (\n        <StoreContext.Provider value={root}>{children}</StoreContext.Provider>\n    );\n};\n\nexport const useRootStore = () => {\n    const context = React.useContext(StoreContext);\n    if (context === undefined) {\n        throw new Error("useRootStore must be used within RootStoreProvider");\n    }\n\n    return context;\n};\n')),(0,a.kt)("h2",{id:"adding-mobx-to-your-project-later"},"Adding mobx to your project later"),(0,a.kt)("p",null,"If you didn't choose the plugin during project creation phase, you can follow the instructions below to add it."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Install ",(0,a.kt)("inlineCode",{parentName:"li"},"mobx")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"mobx-react")," packages.")),(0,a.kt)(i.Z,{defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"yarn",value:"yarn"}],mdxType:"Tabs"},(0,a.kt)(s.Z,{value:"npm",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm install mobx mobx-react\n"))),(0,a.kt)(s.Z,{value:"yarn",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add mobx mobx-react\n")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#making-observable-stores-with-classes"},"Follow instructions beginning from here"))),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://mobx.js.org/installation.html"},"Refer to official documentation on installation for detailed usage. ","\u2192")))}h.isMDXComponent=!0},6010:function(e,t,n){function o(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=o(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}function r(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=o(e))&&(r&&(r+=" "),r+=t);return r}n.d(t,{Z:function(){return r}})}}]);